diff --git a/backend/cmd/app/main.go b/backend/cmd/app/main.go
index 04b77ca..0bd6a22 100644
--- a/backend/cmd/app/main.go
+++ b/backend/cmd/app/main.go
@@ -189,6 +189,9 @@ func main() {
 		// Error logging endpoint
 		publicRoutes.POST("/logs/error", server.LogError)
 
+		// File serving endpoint (for uploaded files)
+		publicRoutes.GET("/files/:filename", server.ServeUploadedFile)
+
 		// Payverge public routes (for guests)
 		publicRoutes.GET("/table/:code", server.GetTableByCode)
 		
@@ -219,11 +222,10 @@ func main() {
 		protectedRoutes.POST("/faucet", server.CheckAndTopUp)
 		protectedRoutes.GET("/faucet/check/:address", server.CheckFaucetAvailability)
 
-		// File upload endpoint
-		protectedRoutes.POST("/upload", server.UploadFile)
-
-		// File upload endpoint
-		protectedRoutes.POST("/upload_protected", server.UploadFileProtected)
+		// File upload endpoints
+		// protectedRoutes.POST("/upload", server.UploadFile) // S3 upload - commented for now
+		// protectedRoutes.POST("/upload_protected", server.UploadFileProtected) // S3 upload - commented for now
+		protectedRoutes.POST("/upload", server.UploadFileLocal)
 
 		// User routes
 		protectedRoutes.GET("/get_user/:address", server.GetUser)
@@ -244,33 +246,27 @@ func main() {
 		protectedRoutes.DELETE("/businesses/:id", server.DeleteBusiness)
 
 		// Menu routes
-		protectedRoutes.POST("/businesses/:businessId/menu", server.CreateMenu)
-		protectedRoutes.GET("/businesses/:businessId/menu", server.GetMenu)
+		protectedRoutes.POST("/businesses/:id/menu", server.CreateMenu)
+		protectedRoutes.GET("/businesses/:id/menu", server.GetMenu)
 
 		// Phase 2: Enhanced Menu Management routes
 		protectedRoutes.POST("/businesses/:id/menu/categories", server.AddMenuCategory)
-		protectedRoutes.PUT("/businesses/:business_id/menu/categories/:category_index", server.UpdateMenuCategory)
-		protectedRoutes.DELETE("/businesses/:business_id/menu/categories/:category_index", server.DeleteMenuCategory)
-		protectedRoutes.POST("/businesses/:business_id/menu/items", server.AddMenuItem)
-		protectedRoutes.PUT("/businesses/:business_id/menu/items", server.UpdateMenuItem)
-		protectedRoutes.DELETE("/businesses/:business_id/menu/categories/:category_index/items/:item_index", server.DeleteMenuItem)
-
-		// Table routes
-		protectedRoutes.POST("/businesses/:businessId/tables", server.CreateTable)
-		protectedRoutes.GET("/businesses/:businessId/tables", server.GetTables)
-		protectedRoutes.GET("/businesses/:businessId/tables/:tableId", server.GetTable)
-		protectedRoutes.PUT("/businesses/:businessId/tables/:tableId", server.UpdateTable)
-		protectedRoutes.DELETE("/businesses/:businessId/tables/:tableId", server.DeleteTable)
-
-		// Phase 2: Enhanced Table Management routes
+		protectedRoutes.PUT("/businesses/:id/menu/categories/:category_index", server.UpdateMenuCategory)
+		protectedRoutes.DELETE("/businesses/:id/menu/categories/:category_index", server.DeleteMenuCategory)
+		protectedRoutes.POST("/businesses/:id/menu/items", server.AddMenuItem)
+		protectedRoutes.PUT("/businesses/:id/menu/items", server.UpdateMenuItem)
+		protectedRoutes.DELETE("/businesses/:id/menu/categories/:category_index/items/:item_index", server.DeleteMenuItem)
+
+		// Table routes (Phase 2: Enhanced Table Management)
 		protectedRoutes.POST("/businesses/:id/tables", server.CreateTableWithQR)
 		protectedRoutes.GET("/businesses/:id/tables", server.GetBusinessTables)
+		protectedRoutes.GET("/businesses/:id/tables/:tableId", server.GetTable)
 		protectedRoutes.PUT("/tables/:id", server.UpdateTableDetails)
 		protectedRoutes.DELETE("/tables/:id", server.DeleteTableSoft)
 
 		// Phase 3: Bill Management routes
-		protectedRoutes.POST("/businesses/:business_id/bills", server.CreateBill)
-		protectedRoutes.GET("/businesses/:business_id/bills", server.GetBusinessBills)
+		protectedRoutes.POST("/businesses/:id/bills", server.CreateBill)
+		protectedRoutes.GET("/businesses/:id/bills", server.GetBusinessBills)
 		protectedRoutes.GET("/bills/:bill_id", server.GetBill)
 		protectedRoutes.PUT("/bills/:bill_id", server.UpdateBill)
 		protectedRoutes.POST("/bills/:bill_id/items", server.AddBillItem)
@@ -279,11 +275,11 @@ func main() {
 		
 		// Phase 5: Bill Splitting routes
 		splittingHandler := handlers.NewSplittingHandler(database.GetDBWrapper())
-		protectedRoutes.GET("/bills/:id/split/options", splittingHandler.GetBillSplitOptions)
-		protectedRoutes.POST("/bills/:id/split/equal", splittingHandler.CalculateEqualSplit)
-		protectedRoutes.POST("/bills/:id/split/custom", splittingHandler.CalculateCustomSplit)
-		protectedRoutes.POST("/bills/:id/split/items", splittingHandler.CalculateItemSplit)
-		protectedRoutes.POST("/bills/:id/split/validate", splittingHandler.ValidateSplit)
+		protectedRoutes.GET("/bills/:bill_id/split/options", splittingHandler.GetBillSplitOptions)
+		protectedRoutes.POST("/bills/:bill_id/split/equal", splittingHandler.CalculateEqualSplit)
+		protectedRoutes.POST("/bills/:bill_id/split/custom", splittingHandler.CalculateCustomSplit)
+		protectedRoutes.POST("/bills/:bill_id/split/items", splittingHandler.CalculateItemSplit)
+		protectedRoutes.POST("/bills/:bill_id/split/validate", splittingHandler.ValidateSplit)
 		
 		// Phase 6: Analytics and Dashboard routes
 		analyticsHandler := handlers.NewAnalyticsHandler(database.GetDBWrapper())
diff --git a/backend/internal/database/business.go b/backend/internal/database/business.go
index f700d22..4cac45c 100644
--- a/backend/internal/database/business.go
+++ b/backend/internal/database/business.go
@@ -4,6 +4,7 @@ import (
 	"encoding/json"
 	"errors"
 	"fmt"
+	"strings"
 	"time"
 
 	"gorm.io/gorm"
@@ -109,11 +110,26 @@ func UpdateMenu(menu *Menu, categories []MenuCategory) error {
 	return nil
 }
 
-// AddMenuCategory adds a new category to an existing menu
+// AddMenuCategory adds a new category to an existing menu, creating the menu if it doesn't exist
 func AddMenuCategory(businessID uint, category MenuCategory) error {
 	menu, categories, err := GetMenuByBusinessID(businessID)
 	if err != nil {
-		return fmt.Errorf("failed to get menu: %w", err)
+		// If menu doesn't exist, create a new one
+		if strings.Contains(err.Error(), "menu not found") {
+			newMenu := &Menu{
+				BusinessID: businessID,
+				Categories: "",
+				IsActive:   true,
+			}
+			emptyCategories := []MenuCategory{}
+			if err := CreateMenu(newMenu, emptyCategories); err != nil {
+				return fmt.Errorf("failed to create new menu: %w", err)
+			}
+			menu = newMenu
+			categories = emptyCategories
+		} else {
+			return fmt.Errorf("failed to get menu: %w", err)
+		}
 	}
 	
 	// Add new category
diff --git a/backend/internal/server/business_handlers.go b/backend/internal/server/business_handlers.go
index f17ba7e..2445da0 100644
--- a/backend/internal/server/business_handlers.go
+++ b/backend/internal/server/business_handlers.go
@@ -252,7 +252,7 @@ func CreateMenu(c *gin.Context) {
 		return
 	}
 
-	businessIDStr := c.Param("businessId")
+	businessIDStr := c.Param("id")
 	businessID, err := strconv.ParseUint(businessIDStr, 10, 32)
 	if err != nil {
 		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid business ID"})
@@ -315,7 +315,7 @@ func CreateMenu(c *gin.Context) {
 
 // GetMenu retrieves a menu for a business
 func GetMenu(c *gin.Context) {
-	businessIDStr := c.Param("businessId")
+	businessIDStr := c.Param("id")
 	businessID, err := strconv.ParseUint(businessIDStr, 10, 32)
 	if err != nil {
 		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid business ID"})
@@ -325,7 +325,15 @@ func GetMenu(c *gin.Context) {
 	menu, categories, err := database.GetMenuByBusinessID(uint(businessID))
 	if err != nil {
 		if strings.Contains(err.Error(), "not found") {
-			c.JSON(http.StatusNotFound, gin.H{"error": "Menu not found"})
+			// Return empty menu structure instead of error
+			c.JSON(http.StatusOK, gin.H{
+				"id":          0,
+				"business_id": businessID,
+				"categories":  []interface{}{},
+				"is_active":   true,
+				"created_at":  "",
+				"updated_at":  "",
+			})
 			return
 		}
 		c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to retrieve menu"})
diff --git a/backend/internal/server/upload_handlers.go b/backend/internal/server/upload_handlers.go
index 51ddb72..fe94d16 100644
--- a/backend/internal/server/upload_handlers.go
+++ b/backend/internal/server/upload_handlers.go
@@ -5,8 +5,12 @@ import (
 	"github.com/gin-gonic/gin"
 	"payverge/internal/s3"
 	"net/http"
+	"os"
 	"path/filepath"
 	"strings"
+	"time"
+	"crypto/rand"
+	"encoding/hex"
 )
 
 // UploadFile handles file uploads to S3
@@ -104,3 +108,105 @@ func UploadFileProtected(c *gin.Context) {
 		"folder":   folderPath,
 	})
 }
+
+// generateUniqueFilename creates a unique filename with timestamp and random string
+func generateUniqueFilename(originalFilename string) string {
+	ext := filepath.Ext(originalFilename)
+	name := strings.TrimSuffix(originalFilename, ext)
+	
+	// Generate random bytes
+	randomBytes := make([]byte, 4)
+	rand.Read(randomBytes)
+	randomString := hex.EncodeToString(randomBytes)
+	
+	// Create timestamp
+	timestamp := time.Now().Format("20060102_150405")
+	
+	return fmt.Sprintf("%s_%s_%s%s", name, timestamp, randomString, ext)
+}
+
+// UploadFileLocal handles file uploads to local filesystem
+func UploadFileLocal(c *gin.Context) {
+	// Get the file from form data
+	file, err := c.FormFile("file")
+	if err != nil {
+		c.JSON(http.StatusBadRequest, gin.H{"error": "No file provided"})
+		return
+	}
+
+	// Validate file size (max 10MB)
+	const maxFileSize = 10 << 20 // 10MB
+	if file.Size > maxFileSize {
+		c.JSON(http.StatusBadRequest, gin.H{"error": "File size too large. Maximum 10MB allowed"})
+		return
+	}
+
+	// Validate file type (images only for now)
+	allowedTypes := map[string]bool{
+		".jpg":  true,
+		".jpeg": true,
+		".png":  true,
+		".gif":  true,
+		".webp": true,
+		".svg":  true,
+	}
+
+	ext := strings.ToLower(filepath.Ext(file.Filename))
+	if !allowedTypes[ext] {
+		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid file type. Only images are allowed"})
+		return
+	}
+
+	// Generate unique filename
+	fileName := generateUniqueFilename(file.Filename)
+
+	// Create upload directory if it doesn't exist (same location as database)
+	uploadDir := "./uploads"
+	if err := os.MkdirAll(uploadDir, 0755); err != nil {
+		c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to create upload directory"})
+		return
+	}
+
+	// Full file path
+	filePath := filepath.Join(uploadDir, fileName)
+
+	// Save the file
+	if err := c.SaveUploadedFile(file, filePath); err != nil {
+		c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to save file"})
+		return
+	}
+
+	// Generate URL for accessing the file
+	fileURL := fmt.Sprintf("/api/v1/files/%s", fileName)
+
+	c.JSON(http.StatusOK, gin.H{
+		"url":      fileURL,
+		"filename": fileName,
+		"size":     file.Size,
+		"type":     ext,
+	})
+}
+
+// ServeUploadedFile serves files from the local uploads directory
+func ServeUploadedFile(c *gin.Context) {
+	filename := c.Param("filename")
+
+	// Clean filename to prevent directory traversal
+	filename = filepath.Clean(filename)
+	if strings.Contains(filename, "..") || strings.Contains(filename, "/") {
+		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid file path"})
+		return
+	}
+
+	// Construct file path
+	filePath := filepath.Join("./uploads", filename)
+
+	// Check if file exists
+	if _, err := os.Stat(filePath); os.IsNotExist(err) {
+		c.JSON(http.StatusNotFound, gin.H{"error": "File not found"})
+		return
+	}
+
+	// Serve the file
+	c.File(filePath)
+}
diff --git a/frontend/next.config.mjs b/frontend/next.config.mjs
index b3e4547..95aabe0 100644
--- a/frontend/next.config.mjs
+++ b/frontend/next.config.mjs
@@ -1,6 +1,14 @@
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   output: "standalone",
+  experimental: {
+    esmExternals: "loose",
+  },
+  // Disable static optimization to prevent build issues
+  trailingSlash: false,
+  generateBuildId: async () => {
+    return 'build-' + Date.now()
+  },
   images: {
     remotePatterns: [
       {
diff --git a/frontend/src/api/uploads.ts b/frontend/src/api/uploads.ts
index ea465f7..0979992 100644
--- a/frontend/src/api/uploads.ts
+++ b/frontend/src/api/uploads.ts
@@ -11,7 +11,7 @@ export const uploadFile = async (file: File, type: 'business-logo' | 'menu-item'
   formData.append('file', file);
   formData.append('type', type);
 
-  const response = await axiosInstance.post<UploadResponse>('/upload', formData, {
+  const response = await axiosInstance.post<UploadResponse>('/inside/upload', formData, {
     headers: {
       'Content-Type': 'multipart/form-data',
     },
@@ -22,5 +22,5 @@ export const uploadFile = async (file: File, type: 'business-logo' | 'menu-item'
 
 // Delete uploaded file
 export const deleteFile = async (filename: string): Promise<void> => {
-  await axiosInstance.delete(`/upload/${filename}`);
+  await axiosInstance.delete(`/inside/upload/${filename}`);
 };
diff --git a/frontend/src/app/(shop)/(info)/how-it-works/page.tsx b/frontend/src/app/(shop)/(info)/how-it-works/page.tsx
deleted file mode 100644
index 02645d3..0000000
--- a/frontend/src/app/(shop)/(info)/how-it-works/page.tsx
+++ /dev/null
@@ -1,197 +0,0 @@
-"use client";
-
-import React from "react";
-import Image from "next/image";
-import { Card, CardBody } from "@nextui-org/react";
-import {
-  IoWalletOutline,
-  IoCodeSlashOutline,
-  IoStatsChartOutline,
-  IoShieldCheckmarkOutline,
-  IoRocketOutline,
-  IoImageOutline,
-  IoDocumentTextOutline,
-  IoBarChartOutline,
-} from "react-icons/io5";
-import { useTranslation } from "@/i18n/useTranslation";
-
-export default function HowItWorksPage() {
-  const { t } = useTranslation();
-  
-  // Define steps with icons
-  const steps = [
-    {
-      title: t('howItWorks.steps.0.title'),
-      description: t('howItWorks.steps.0.description'),
-      details: Array.isArray(t('howItWorks.steps.0.details')) ? t('howItWorks.steps.0.details') : [
-        "Support for major Web3 wallets",
-        "Secure blockchain transactions",
-        "Easy portfolio management"
-      ],
-      icon: <IoWalletOutline className="w-12 h-12 text-primary" />
-    },
-    {
-      title: t('howItWorks.steps.1.title'),
-      description: t('howItWorks.steps.1.description'),
-      details: Array.isArray(t('howItWorks.steps.1.details')) ? t('howItWorks.steps.1.details') : [
-        "Quick identity verification",
-        "Secure document storage",
-        "Regulatory compliance"
-      ],
-      icon: <IoShieldCheckmarkOutline className="w-12 h-12 text-primary" />
-    },
-    {
-      title: t('howItWorks.steps.2.title'),
-      description: t('howItWorks.steps.2.description'),
-      details: Array.isArray(t('howItWorks.steps.2.details')) ? t('howItWorks.steps.2.details') : [
-        "Smart contract integration",
-        "Transparent blockchain transactions",
-        "Flexible development options"
-      ],
-      icon: <IoCodeSlashOutline className="w-12 h-12 text-primary" />
-    },
-    {
-      title: t('howItWorks.steps.3.title'),
-      description: t('howItWorks.steps.3.description'),
-      details: Array.isArray(t('howItWorks.steps.3.details')) ? t('howItWorks.steps.3.details') : [
-        "Unique portfolio identifier",
-        "Secure ownership record",
-        "Easy transfer and management"
-      ],
-      icon: <IoImageOutline className="w-12 h-12 text-primary" />
-    }
-  ];
-  
-  // Define features with icons
-  const features = [
-    {
-      title: t('howItWorks.features.0.title'),
-      description: t('howItWorks.features.0.description'),
-      icon: <IoDocumentTextOutline className="w-8 h-8 text-primary" />
-    },
-    {
-      title: t('howItWorks.features.1.title'),
-      description: t('howItWorks.features.1.description'),
-      icon: <IoBarChartOutline className="w-8 h-8 text-primary" />
-    },
-    {
-      title: t('howItWorks.features.2.title'),
-      description: t('howItWorks.features.2.description'),
-      icon: <IoRocketOutline className="w-8 h-8 text-primary" />
-    }
-  ];
-  
-  // Define benefits
-  const benefits = [
-    {
-      title: t('howItWorks.benefits.0.title'),
-      description: t('howItWorks.benefits.0.description')
-    },
-    {
-      title: t('howItWorks.benefits.1.title'),
-      description: t('howItWorks.benefits.1.description')
-    },
-    {
-      title: t('howItWorks.benefits.2.title'),
-      description: t('howItWorks.benefits.2.description')
-    }
-  ];
-
-
-  return (
-    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
-      {/* Hero Section */}
-      <Card className="mb-16 bg-gradient-to-r from-primary to-primary/80">
-        <CardBody className="text-center py-12">
-          <h1 className="text-4xl font-bold text-white mb-6">
-            {t('howItWorks.title')}
-          </h1>
-          <p className="text-white/90 max-w-3xl mx-auto text-lg">
-            {t('howItWorks.subtitle')}
-          </p>
-        </CardBody>
-      </Card>
-
-      {/* Investment Process */}
-      <div className="mb-20">
-        <h2 className="text-3xl font-bold text-gray-900 mb-12 text-center">
-          {t('howItWorks.investmentJourney')}
-        </h2>
-        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
-          {steps.map((step, index) => (
-            <Card key={index} className="border border-gray-200 hover:border-primary transition-colors">
-              <CardBody className="p-8">
-                <div className="flex items-start gap-6">
-                  <div className="flex-shrink-0 bg-primary/10 p-3 rounded-lg">
-                    {step.icon}
-                  </div>
-                  <div>
-                    <h3 className="text-xl font-semibold text-primary mb-3">
-                      {step.title}
-                    </h3>
-                    <p className="text-gray-600 mb-4">
-                      {step.description}
-                    </p>
-                    <ul className="space-y-2">
-                      {Array.isArray(step.details) && step.details.map((detail: string, idx: number) => (
-                        <li key={idx} className="flex items-center text-gray-600">
-                          <span className="mr-2">•</span>
-                          {detail}
-                        </li>
-                      ))}
-                    </ul>
-                  </div>
-                </div>
-              </CardBody>
-            </Card>
-          ))}
-        </div>
-      </div>
-
-      {/* Platform Features */}
-      <section className="mb-20">
-        <h2 className="text-3xl font-bold text-gray-900 mb-12 text-center">
-          {t('howItWorks.platformFeatures')}
-        </h2>
-        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
-          {features.map((feature, index) => (
-            <Card key={index} className="border border-gray-200 hover:border-primary transition-colors">
-              <CardBody className="p-8 text-center">
-                <div className="flex justify-center mb-6">
-                  {feature.icon}
-                </div>
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {feature.title}
-                </h3>
-                <p className="text-gray-600">
-                  {feature.description}
-                </p>
-              </CardBody>
-            </Card>
-          ))}
-        </div>
-      </section>
-
-      {/* Investment Benefits */}
-      <section>
-        <h2 className="text-3xl font-bold text-gray-900 mb-12 text-center">
-          {t('howItWorks.benefitsOfInvesting')}
-        </h2>
-        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
-          {benefits.map((benefit: any, index: number) => (
-            <Card key={index} className="border border-gray-200 hover:border-primary transition-colors">
-              <CardBody className="p-8 text-center">
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {benefit.title}
-                </h3>
-                <p className="text-gray-600">
-                  {benefit.description}
-                </p>
-              </CardBody>
-            </Card>
-          ))}
-        </div>
-      </section>
-    </div>
-  );
-}
diff --git a/frontend/src/app/(shop)/(info)/mission/page.tsx b/frontend/src/app/(shop)/(info)/mission/page.tsx
deleted file mode 100644
index 98b7976..0000000
--- a/frontend/src/app/(shop)/(info)/mission/page.tsx
+++ /dev/null
@@ -1,153 +0,0 @@
-"use client";
-
-import React from "react";
-import { Card, CardBody } from "@nextui-org/react";
-import { useTranslation } from "@/i18n/useTranslation";
-
-interface CoreValue {
-  title: string;
-  description: string;
-  icon: string;
-}
-
-export default function MissionPage() {
-  const { t } = useTranslation();
-  
-  // Define fallback values in case translations fail
-  const fallbackValues: CoreValue[] = [
-    {
-      title: "Real Ownership",
-      description: "Every token represents genuine ownership in our vehicle fleet, backed by real assets and secured through blockchain technology.",
-      icon: "🔐"
-    },
-    {
-      title: "Transparency",
-      description: "Full visibility into fleet performance, revenue distribution, and operational metrics through our blockchain-based platform.",
-      icon: "📊"
-    },
-    {
-      title: "Innovation",
-      description: "Bridging traditional car rental with blockchain technology to create a new paradigm of fractional vehicle ownership.",
-      icon: "💡"
-    },
-    {
-      title: "Accessibility",
-      description: "Making car fleet investment accessible to everyone, regardless of their investment capacity.",
-      icon: "🌍"
-    },
-    {
-      title: "Sustainability",
-      description: "Promoting efficient vehicle utilization and responsible asset management for long-term value creation.",
-      icon: "🌱"
-    },
-    {
-      title: "Community",
-      description: "Building a community of forward-thinking investors who believe in the future of tokenized real-world assets.",
-      icon: "🤝"
-    }
-  ];
-  
-  // Get values from translations with proper type safety
-  const translatedValues = t('mission.values.items');
-  const values: CoreValue[] = Array.isArray(translatedValues) ? translatedValues : fallbackValues;
-
-  return (
-    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
-      {/* Hero Section */}
-      <Card className="mb-16 bg-gradient-to-r from-primary to-primary/80">
-        <CardBody className="text-center py-12">
-          <h1 className="text-4xl font-bold text-white mb-6">
-            {t('mission.title')}
-          </h1>
-          <p className="text-white/90 max-w-3xl mx-auto text-lg leading-relaxed">
-            {t('mission.subtitle')}
-          </p>
-        </CardBody>
-      </Card>
-
-      <div className="space-y-16">
-        {/* Vision Section */}
-        <section>
-          <h2 className="text-3xl font-bold text-gray-900 mb-6 text-center">
-            {t('mission.vision.title')}
-          </h2>
-          <div className="grid md:grid-cols-2 gap-8">
-            <Card>
-              <CardBody className="p-8">
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {t('mission.vision.democratizing.title')}
-                </h3>
-                <p className="text-gray-600 leading-relaxed">
-                  {t('mission.vision.democratizing.description')}
-                </p>
-              </CardBody>
-            </Card>
-            <Card>
-              <CardBody className="p-8">
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {t('mission.vision.bridging.title')}
-                </h3>
-                <p className="text-gray-600 leading-relaxed">
-                  {t('mission.vision.bridging.description')}
-                </p>
-              </CardBody>
-            </Card>
-          </div>
-        </section>
-
-        {/* What Sets Us Apart */}
-        <section>
-          <h2 className="text-3xl font-bold text-gray-900 mb-6 text-center">
-            {t('mission.difference.title')}
-          </h2>
-          <div className="space-y-6">
-            <Card>
-              <CardBody className="p-8">
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {t('mission.difference.ownership.title')}
-                </h3>
-                <p className="text-gray-600 leading-relaxed">
-                  {t('mission.difference.ownership.description')}
-                </p>
-              </CardBody>
-            </Card>
-            <Card>
-              <CardBody className="p-8">
-                <h3 className="text-xl font-semibold text-primary mb-4">
-                  {t('mission.difference.transparency.title')}
-                </h3>
-                <p className="text-gray-600 leading-relaxed">
-                  {t('mission.difference.transparency.description')}
-                </p>
-              </CardBody>
-            </Card>
-          </div>
-        </section>
-
-        {/* Core Values */}
-        <section>
-          <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center">
-            {t('mission.values.title')}
-          </h2>
-          <div className="max-w-5xl mx-auto">
-            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
-              {values.map((value: CoreValue, index: number) => (
-                <Card key={index}>
-                  <CardBody className="p-6 text-center">
-                    <div className="text-4xl mb-4">{value.icon}</div>
-                    <h3 className="text-xl font-semibold text-primary mb-3">
-                      {value.title}
-                    </h3>
-                    <p className="text-gray-600">
-                      {value.description}
-                    </p>
-                  </CardBody>
-                </Card>
-              ))}
-            </div>
-          </div>
-        </section>
-      </div>
-    </div>
-  );
-}
diff --git a/frontend/src/app/(shop)/layout.tsx b/frontend/src/app/(shop)/layout.tsx
deleted file mode 100644
index ff85ac3..0000000
--- a/frontend/src/app/(shop)/layout.tsx
+++ /dev/null
@@ -1,40 +0,0 @@
-import type { Metadata } from "next";
-
-import { Footer, Sidebar, TopMenu } from "@/components";
-import { UserProvider } from "@/providers/UserProvider";
-import { ShareBar } from "@/components/shared/ShareBar";
-import { OnboardingWrapper } from "@/components/onboarding/OnboardingWrapper";
-import { TranslationProvider } from "@/i18n/TranslationContext";
-import { LanguageProvider } from "@/i18n/useLanguage";
-import FloatingLanguageSwitcher from "@/components/FloatingLanguageSwitcher";
-
-export const metadata: Metadata = {
-  title: "Payverge",
-  description:
-    "Payverge, the future of crypto payments for hospitality!",
-};
-
-export default function RootLayout({
-  children,
-}: Readonly<{
-  children: React.ReactNode;
-}>) {
-  return (
-    <LanguageProvider>
-      <TranslationProvider>
-        <UserProvider>
-          <main className="min-h-screen flex flex-col bg-white dark:bg-zinc-950 transition-colors duration-200">
-            {/* <TopMenu /> */}
-            {/* {getNetwork().id === baseSepolia.id && <InvestmentBanner />} */}
-            {/* <Sidebar /> */}
-            <div className="px-5 sm:px-10 flex-1">{children}</div>
-            {/* <Footer /> */}
-            {/* <OnboardingWrapper /> */}
-            {/* <FloatingLanguageSwitcher /> */}
-            {/* <ShareBar /> */}
-          </main>
-        </UserProvider>
-      </TranslationProvider>
-    </LanguageProvider>
-  );
-}
diff --git a/frontend/src/app/(shop)/page.tsx b/frontend/src/app/(shop)/page.tsx
index 0d1ad1d..e69de29 100644
--- a/frontend/src/app/(shop)/page.tsx
+++ b/frontend/src/app/(shop)/page.tsx
@@ -1,596 +0,0 @@
-"use client";
-import { useState } from "react";
-import { useRouter } from "next/navigation";
-import { useTranslation } from "@/i18n/useTranslation";
-
-export default function Home() {
-  const [email, setEmail] = useState("");
-  const [businessName, setBusinessName] = useState("");
-  const [isSubmitting, setIsSubmitting] = useState(false);
-  const [showSuccessModal, setShowSuccessModal] = useState(false);
-  const { t } = useTranslation();
-  const router = useRouter();
-
-  const handleWaitlistSubmit = async (e: React.FormEvent) => {
-    e.preventDefault();
-    setIsSubmitting(true);
-
-    try {
-      const { subscribeToWaitlist } = await import('@/api/subscribers/getSubscribers');
-      const result = await subscribeToWaitlist(email, businessName);
-
-      if (result.success) {
-        setEmail("");
-        setBusinessName("");
-        setShowSuccessModal(true);
-      } else {
-        alert(`Error: ${result.message}`);
-      }
-    } catch (error: any) {
-      console.error('Subscription error:', error);
-      alert("Something went wrong. Please try again.");
-    } finally {
-      setIsSubmitting(false);
-    }
-  };
-
-  const handleShareOnX = () => {
-    const tweetText = encodeURIComponent("Just signed up for updates from https://payverge.io - the future of crypto payments for hospitality! 🚀 Excited to see what they're building.");
-    const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetText}`;
-    window.open(tweetUrl, '_blank');
-  };
-
-  return (
-    <div className="min-h-screen bg-white">
-      {/* Hero Section */}
-      <section className="py-16 lg:py-24 bg-white relative overflow-hidden">
-        {/* Subtle animated background elements */}
-        <div className="absolute inset-0 overflow-hidden pointer-events-none">
-          <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-50 to-purple-50 rounded-full blur-3xl opacity-30 animate-pulse"></div>
-          <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-tr from-gray-50 to-blue-50 rounded-full blur-3xl opacity-20 animate-pulse" style={{ animationDelay: '2s' }}></div>
-        </div>
-
-        <div className="container mx-auto px-6 relative">
-          <div className="max-w-4xl mx-auto text-center">
-            {/* Floating badge */}
-            <div className="inline-flex items-center gap-2 bg-gray-50 border border-gray-200 px-4 py-2 rounded-full text-sm text-gray-600 mb-8 hover:bg-gray-100 transition-colors duration-200">
-              <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
-              Now live and ready to use
-            </div>
-
-            <h1 className="text-4xl lg:text-6xl font-light text-gray-900 mb-6 tracking-wide leading-tight">
-              Crypto payments for <br />
-              <span className="italic font-light bg-gradient-to-r from-gray-900 via-gray-700 to-gray-900 bg-clip-text text-transparent tracking-wider">modern hospitality</span>
-            </h1>
-            <p className="text-lg lg:text-xl text-gray-600 mb-12 font-light leading-relaxed max-w-2xl mx-auto">
-              Accept USDC payments, split bills seamlessly, and receive instant settlements with complete transparency
-            </p>
-            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
-              <button
-                onClick={() => router.push('/business/register')}
-                className="group bg-gray-900 text-white px-8 py-3 text-base font-medium hover:bg-gray-800 transition-all duration-200 relative overflow-hidden tracking-wide"
-              >
-                <span className="relative z-10 tracking-wide">Start Your Business</span>
-                <div className="absolute inset-0 bg-gradient-to-r from-gray-800 to-gray-900 opacity-0 group-hover:opacity-100 transition-opacity duration-200"></div>
-              </button>
-              <button
-                onClick={() => router.push('/scan')}
-                className="group border border-gray-300 text-gray-700 px-8 py-3 text-base font-medium hover:border-gray-400 hover:text-gray-900 transition-all duration-200 tracking-wide"
-              >
-                Scan QR Code
-              </button>
-            </div>
-
-            {/* Quick Access Links */}
-            <div className="mt-8 flex flex-wrap justify-center gap-6 text-sm text-gray-500">
-              <button
-                onClick={() => document.getElementById('how-it-works')?.scrollIntoView({ behavior: 'smooth' })}
-                className="hover:text-gray-700 transition-colors underline decoration-dotted underline-offset-4"
-              >
-                How it works
-              </button>
-              <button
-                onClick={() => document.getElementById('updates')?.scrollIntoView({ behavior: 'smooth' })}
-                className="hover:text-gray-700 transition-colors underline decoration-dotted underline-offset-4"
-              >
-                Get Updates
-              </button>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* Problem → Solution Section */}
-      <section className="py-20 bg-gradient-to-b from-white via-gray-50/30 to-white relative overflow-hidden">
-        {/* Subtle background pattern */}
-        <div className="absolute inset-0 opacity-[0.02]">
-          <div className="absolute top-20 left-20 w-72 h-72 bg-gray-900 rounded-full blur-3xl"></div>
-          <div className="absolute bottom-20 right-20 w-96 h-96 bg-gray-600 rounded-full blur-3xl"></div>
-        </div>
-
-        <div className="container mx-auto px-6 relative">
-          <div className="max-w-6xl mx-auto">
-            {/* Header */}
-            <div className="text-center mb-20">
-              <div className="inline-flex items-center gap-2 bg-gray-100 px-4 py-2 rounded-full text-sm text-gray-600 mb-8">
-                <div className="w-2 h-2 bg-gray-400 rounded-full animate-pulse"></div>
-                The current state of payments
-              </div>
-              <h2 className="text-4xl lg:text-5xl font-light text-gray-900 mb-6 tracking-wide">
-                From broken to <span className="italic font-light tracking-wider">beautiful</span>
-              </h2>
-            </div>
-
-            {/* Comparison Layout */}
-            <div className="grid lg:grid-cols-2 gap-16 items-start">
-              {/* Traditional Payments - Problem */}
-              <div className="relative">
-                <div className="bg-white border border-gray-200 rounded-2xl p-8 shadow-sm hover:shadow-md transition-shadow duration-300">
-                  <div className="space-y-8">
-                    <div className="space-y-4">
-                      <h3 className="text-2xl lg:text-3xl font-light text-gray-900 leading-tight">
-                        The problem with <br />
-                        <span className="italic">traditional payments</span>
-                      </h3>
-                      <p className="text-lg text-gray-600 leading-relaxed">
-                        Restaurants lose money to high processing fees, delayed settlements, and complex bill splitting that frustrates customers.
-                      </p>
-                    </div>
-
-                    <div className="space-y-6">
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-red-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-red-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">High processing fees</h4>
-                          <p className="text-gray-600">Credit card fees eat into already thin margins</p>
-                        </div>
-                      </div>
-
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-red-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-red-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">Delayed settlements</h4>
-                          <p className="text-gray-600">Wait days for payment processing and bank transfers</p>
-                        </div>
-                      </div>
-
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-red-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-red-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">Complex bill splitting</h4>
-                          <p className="text-gray-600">Manual calculations and multiple payment methods create friction</p>
-                        </div>
-                      </div>
-                    </div>
-                  </div>
-                </div>
-              </div>
-
-              {/* Payverge Solution */}
-              <div className="relative">
-                {/* Subtle glow effect */}
-                <div className="absolute inset-0 bg-gradient-to-r from-green-500/5 to-blue-500/5 rounded-2xl blur-xl"></div>
-
-                <div className="relative bg-white border border-gray-200 rounded-2xl p-8 shadow-sm hover:shadow-md transition-shadow duration-300">
-                  <div className="space-y-8">
-                    <div className="space-y-4">
-                      <h3 className="text-2xl lg:text-3xl font-light text-gray-900 leading-tight">
-                        The <span className="italic">Payverge</span> <br />
-                        solution
-                      </h3>
-                      <p className="text-lg text-gray-600 leading-relaxed">
-                        Instant USDC settlements, transparent fees, and seamless bill splitting that delights your customers.
-                      </p>
-                    </div>
-
-                    <div className="space-y-6">
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-green-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">Instant settlements</h4>
-                          <p className="text-gray-600">Receive USDC payments immediately with blockchain transparency</p>
-                        </div>
-                      </div>
-
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-green-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">Lower fees</h4>
-                          <p className="text-gray-600">Transparent 2% platform fee with no hidden charges</p>
-                        </div>
-                      </div>
-
-                      <div className="flex items-start gap-4">
-                        <div className="w-8 h-8 rounded-full bg-green-50 flex items-center justify-center flex-shrink-0 mt-1">
-                          <svg className="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
-                            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
-                          </svg>
-                        </div>
-                        <div>
-                          <h4 className="font-medium text-gray-900 mb-1">Smart bill splitting</h4>
-                          <p className="text-gray-600">Automatic calculations with flexible splitting options</p>
-                        </div>
-                      </div>
-                    </div>
-
-                  </div>
-                </div>
-              </div>
-            </div>
-
-            {/* Call to Action */}
-            <div className="pt-4">
-              <button
-                onClick={() => router.push('/business/register')}
-                className="inline-flex items-center gap-2 bg-gray-900 text-white px-6 py-3 rounded-lg font-medium hover:bg-gray-800 transition-colors group"
-              >
-                Get started today
-                <svg className="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
-                </svg>
-              </button>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* Key Features Section */}
-      <section className="py-16 bg-white relative">
-        {/* Subtle grid pattern */}
-        <div className="absolute inset-0 opacity-[0.02]" style={{ backgroundImage: 'radial-gradient(circle at 1px 1px, rgba(0,0,0,0.15) 1px, transparent 0)', backgroundSize: '20px 20px' }}></div>
-
-        <div className="container mx-auto px-6 relative">
-          <div className="max-w-4xl mx-auto text-center mb-20">
-            <div className="inline-flex items-center gap-2 bg-blue-50 px-4 py-2 rounded-full text-sm text-blue-700 mb-8">
-              <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
-                <path fillRule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clipRule="evenodd" />
-              </svg>
-              Core features
-            </div>
-            <h2 className="text-3xl lg:text-4xl font-light text-gray-900 mb-6 tracking-wide">
-              Built for modern hospitality
-            </h2>
-            <p className="text-lg text-gray-600 font-light leading-relaxed">
-              Everything you need to accept crypto payments and manage your business
-            </p>
-          </div>
-
-          <div className="max-w-6xl mx-auto">
-            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Digital Menus</h3>
-                <p className="text-gray-600 leading-relaxed">Guests scan QR codes to browse sleek online menus with real-time availability</p>
-              </div>
-
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Split Payments</h3>
-                <p className="text-gray-600 leading-relaxed">Equal split, by item, or custom amounts — all handled seamlessly onchain</p>
-              </div>
-
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Crypto Tipping</h3>
-                <p className="text-gray-600 leading-relaxed">Diners add tips in USDC, routed directly to your designated tipping wallet</p>
-              </div>
-
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M13 10V3L4 14h7v7l9-11h-7z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Instant Settlement</h3>
-                <p className="text-gray-600 leading-relaxed">Receive funds in your wallet immediately, minus a flat 2% fee</p>
-              </div>
-
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Onchain Transparency</h3>
-                <p className="text-gray-600 leading-relaxed">Immutable logs for all transactions with complete transparency</p>
-              </div>
-
-              <div className="group text-center p-6 rounded-xl hover:bg-gray-50/50 transition-all duration-300 hover:scale-105">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-gray-200 transition-colors duration-300">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Global Access</h3>
-                <p className="text-gray-600 leading-relaxed">Accept payments from anyone with a crypto wallet, anywhere in the world</p>
-              </div>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* How It Works Section */}
-      <section id="how-it-works" className="py-16 bg-gray-50">
-        <div className="container mx-auto px-6">
-          <div className="max-w-4xl mx-auto text-center mb-20">
-            <h2 className="text-3xl lg:text-4xl font-light text-gray-900 mb-6 tracking-wide">
-              How it works
-            </h2>
-            <p className="text-lg text-gray-600 font-light leading-relaxed">
-              Simple, secure, and seamless crypto payments in three steps
-            </p>
-          </div>
-
-          <div className="max-w-5xl mx-auto">
-            <div className="grid lg:grid-cols-3 gap-16">
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-900 rounded-full flex items-center justify-center mx-auto mb-8">
-                  <span className="text-lg font-medium text-white">1</span>
-                </div>
-                <h3 className="text-xl font-medium text-gray-900 mb-4">Guest Orders</h3>
-                <p className="text-gray-600 leading-relaxed">
-                  Diners scan your QR code, browse the menu, and place their order with items automatically added to their bill
-                </p>
-              </div>
-
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-900 rounded-full flex items-center justify-center mx-auto mb-8">
-                  <span className="text-lg font-medium text-white">2</span>
-                </div>
-                <h3 className="text-xl font-medium text-gray-900 mb-4">Split & Pay</h3>
-                <p className="text-gray-600 leading-relaxed">
-                  Groups can split bills equally, by item, or custom amounts. Each person pays their share in USDC with optional tips
-                </p>
-              </div>
-
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-900 rounded-full flex items-center justify-center mx-auto mb-8">
-                  <span className="text-lg font-medium text-white">3</span>
-                </div>
-                <h3 className="text-xl font-medium text-gray-900 mb-4">Instant Settlement</h3>
-                <p className="text-gray-600 leading-relaxed">
-                  Funds arrive in your wallet immediately with complete transparency. All transactions are recorded onchain
-                </p>
-              </div>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* Who It's For Section */}
-      <section className="py-16 bg-white">
-        <div className="container mx-auto px-6">
-          <div className="max-w-4xl mx-auto text-center mb-20">
-            <h2 className="text-3xl lg:text-4xl font-light text-gray-900 mb-6 tracking-wide">
-              Built for hospitality
-            </h2>
-            <p className="text-lg text-gray-600 font-light leading-relaxed max-w-2xl mx-auto">
-              Whether you run a small café or a high-end restaurant, Payverge gives you modern payments without the friction
-            </p>
-          </div>
-
-          <div className="max-w-4xl mx-auto">
-            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-8">
-              <div className="text-center">
-                <div className="w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4">
-                  <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
-                  </svg>
-                </div>
-                <h3 className="text-sm font-medium text-gray-900">Restaurants</h3>
-              </div>
-              <div className="text-center">
-                <div className="w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4">
-                  <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
-                  </svg>
-                </div>
-                <h3 className="text-sm font-medium text-gray-900">Bars & Lounges</h3>
-              </div>
-              <div className="text-center">
-                <div className="w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4">
-                  <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M10.5 3L12 2l1.5 1H21l-1 6H4l-1-6h7.5z" />
-                  </svg>
-                </div>
-                <h3 className="text-sm font-medium text-gray-900">Coffee Shops</h3>
-              </div>
-              <div className="text-center">
-                <div className="w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4">
-                  <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
-                  </svg>
-                </div>
-                <h3 className="text-sm font-medium text-gray-900">Hotels</h3>
-              </div>
-              <div className="text-center">
-                <div className="w-16 h-16 bg-gray-50 rounded-full flex items-center justify-center mx-auto mb-4">
-                  <svg className="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v14a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2M9 12l2 2 4-4" />
-                  </svg>
-                </div>
-                <h3 className="text-sm font-medium text-gray-900">Event Venues</h3>
-              </div>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* Updates Section */}
-      <section id="updates" className="py-16 bg-gray-900 text-white">
-        <div className="container mx-auto px-6">
-          <div className="max-w-3xl mx-auto text-center">
-            <h2 className="text-3xl lg:text-4xl font-light mb-6 tracking-wide">
-              Stay updated on Payverge
-            </h2>
-            <p className="text-lg text-gray-300 mb-12 font-light leading-relaxed">
-              Get updates on new features, improvements, and crypto payment insights
-            </p>
-
-            <form onSubmit={handleWaitlistSubmit} className="max-w-sm mx-auto space-y-4">
-              <input
-                type="email"
-                placeholder="Enter your email"
-                value={email}
-                onChange={(e) => setEmail(e.target.value)}
-                required
-                className="w-full px-4 py-3 bg-white text-gray-900 placeholder-gray-500 border-0 focus:outline-none focus:ring-1 focus:ring-gray-300"
-              />
-              <input
-                type="text"
-                placeholder="Business name (optional)"
-                value={businessName}
-                onChange={(e) => setBusinessName(e.target.value)}
-                className="w-full px-4 py-3 bg-white text-gray-900 placeholder-gray-500 border-0 focus:outline-none focus:ring-1 focus:ring-gray-300"
-              />
-              <button
-                type="submit"
-                disabled={isSubmitting}
-                className="w-full bg-white text-gray-900 px-6 py-3 font-medium hover:bg-gray-100 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
-              >
-                {isSubmitting ? "Joining..." : "Get Updates"}
-              </button>
-            </form>
-          </div>
-        </div>
-      </section>
-
-      {/* Trust & Vision Section */}
-      <section className="py-16 bg-white">
-        <div className="container mx-auto px-6">
-          <div className="max-w-4xl mx-auto text-center">
-            <h2 className="text-3xl lg:text-4xl font-light text-gray-900 mb-6 tracking-wide">
-              Why Payverge?
-            </h2>
-            <p className="text-lg text-gray-600 font-light leading-relaxed mb-16">
-              Built for the future of hospitality payments
-            </p>
-
-            <div className="grid md:grid-cols-3 gap-12 mb-16">
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Built on Ethereum & USDC</h3>
-                <p className="text-gray-600 leading-relaxed">Transparent, global, and trusted infrastructure you can rely on</p>
-              </div>
-
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">Hospitality-First Design</h3>
-                <p className="text-gray-600 leading-relaxed">Menus, bills, tips, and accountability designed specifically for hospitality</p>
-              </div>
-
-              <div className="text-center">
-                <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
-                  <svg className="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
-                  </svg>
-                </div>
-                <h3 className="text-lg font-medium text-gray-900 mb-3">No Upfront Fees</h3>
-                <p className="text-gray-600 leading-relaxed">Just 2% per transaction. Simple and transparent pricing</p>
-              </div>
-            </div>
-
-            <div className="bg-gray-50 p-8 max-w-2xl mx-auto">
-              <p className="text-gray-600 leading-relaxed">
-                Payverge is a crypto-native hospitality payment platform built to replace
-                outdated card processors with instant, transparent USDC payments
-              </p>
-            </div>
-          </div>
-        </div>
-      </section>
-
-      {/* Success Modal */}
-      {showSuccessModal && (
-        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
-          <div className="bg-white rounded-lg max-w-md w-full p-8 relative animate-in fade-in zoom-in duration-200">
-            {/* Close button */}
-            <button
-              onClick={() => setShowSuccessModal(false)}
-              className="absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors"
-            >
-              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
-              </svg>
-            </button>
-
-            {/* Success icon */}
-            <div className="flex justify-center mb-6">
-              <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center">
-                <svg className="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
-                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
-                </svg>
-              </div>
-            </div>
-
-            {/* Modal content */}
-            <div className="text-center">
-              <h3 className="text-xl font-semibold text-gray-900 mb-3">
-                Welcome to the future! 🚀
-              </h3>
-              <p className="text-gray-600 mb-6 leading-relaxed">
-                Thanks for subscribing to updates! We&apos;ll keep you informed about new features, improvements, and insights about crypto payments in hospitality.
-              </p>
-
-              {/* Share section */}
-              <div className="border-t pt-6">
-                <p className="text-sm text-gray-500 mb-4">
-                  Help us spread the word!
-                </p>
-                <button
-                  onClick={handleShareOnX}
-                  className="inline-flex items-center gap-2 bg-black text-white px-6 py-3 rounded-lg hover:bg-gray-800 transition-colors font-medium"
-                >
-                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
-                    <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z" />
-                  </svg>
-                  Share on X
-                </button>
-              </div>
-            </div>
-          </div>
-        </div>
-      )}
-    </div>
-  );
-}
diff --git a/frontend/src/app/business/[businessId]/dashboard/page.tsx b/frontend/src/app/business/[businessId]/dashboard/page.tsx
index 280cf5b..4a57ab9 100644
--- a/frontend/src/app/business/[businessId]/dashboard/page.tsx
+++ b/frontend/src/app/business/[businessId]/dashboard/page.tsx
@@ -2,8 +2,9 @@
 
 import React, { useEffect, useState, useCallback } from 'react';
 import { Card, CardBody, CardHeader, Button, Tabs, Tab, Spinner } from '@nextui-org/react';
-import { Building2, Menu, Users, Receipt, Settings, BarChart3 } from 'lucide-react';
-import { useParams } from 'next/navigation';
+import { Building2, Menu, Users, Receipt, Settings, BarChart3, AlertCircle } from 'lucide-react';
+import { useParams, useRouter } from 'next/navigation';
+import { useAppKitAccount } from '@reown/appkit/react';
 import { Business, getBusiness } from '../../../../api/business';
 import MenuBuilder from '../../../../components/business/MenuBuilder';
 import TableManager from '../../../../components/business/TableManager';
@@ -22,22 +23,78 @@ export default function BusinessDashboardPage({ params }: BusinessDashboardProps
   const [error, setError] = useState<string | null>(null);
   const [activeTab, setActiveTab] = useState('overview');
 
+  const router = useRouter();
+  const { address, isConnected } = useAppKitAccount();
   const businessId = parseInt(params.businessId);
 
+  // Check if businessId is valid
+  if (isNaN(businessId)) {
+    return (
+      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
+        <Card className="max-w-md">
+          <CardBody className="text-center">
+            <AlertCircle className="mx-auto mb-4 text-danger-600" size={48} />
+            <p className="text-danger-600 mb-4">Invalid business ID</p>
+            <Button color="primary" onPress={() => router.push('/dashboard')}>
+              Back to Dashboard
+            </Button>
+          </CardBody>
+        </Card>
+      </div>
+    );
+  }
+
   const loadBusiness = useCallback(async () => {
     try {
       setLoading(true);
+      setError(null);
+      
+      // Check if user is connected before making API call
+      if (!isConnected || !address) {
+        throw new Error('Please connect your wallet to access business dashboard');
+      }
+      
       const businessData = await getBusiness(businessId);
       setBusiness(businessData);
+      setLoading(false);
     } catch (error) {
       console.error('Error loading business:', error);
+      let errorMessage = 'Failed to load business';
+      
+      if (error instanceof Error) {
+        errorMessage = error.message;
+      } else if (typeof error === 'object' && error !== null && 'status' in error) {
+        const status = (error as any).status;
+        if (status === 401) {
+          errorMessage = 'Authentication required. Please connect your wallet and sign in.';
+        } else if (status === 403) {
+          errorMessage = 'Access denied. You may not own this business.';
+        } else if (status === 404) {
+          errorMessage = 'Business not found.';
+        }
+      }
+      
+      setError(errorMessage);
       setLoading(false);
     }
-  }, [businessId]);
+  }, [businessId, isConnected, address]);
 
   useEffect(() => {
-    loadBusiness();
-  }, [loadBusiness]);
+    // Only load business if we have a valid businessId
+    if (!isNaN(businessId)) {
+      loadBusiness();
+    }
+    
+    // Set a timeout to prevent infinite loading
+    const timeout = setTimeout(() => {
+      if (loading && !business && !error) {
+        setError('Loading timeout. Please check your connection and try again.');
+        setLoading(false);
+      }
+    }, 15000); // 15 second timeout
+    
+    return () => clearTimeout(timeout);
+  }, [loadBusiness, businessId, loading, business, error]);
 
   if (loading) {
     return (
@@ -50,21 +107,39 @@ export default function BusinessDashboardPage({ params }: BusinessDashboardProps
     );
   }
 
-  if (error || !business) {
+  if (error || (!loading && !business)) {
     return (
       <div className="min-h-screen bg-gray-50 flex items-center justify-center">
         <Card className="max-w-md">
           <CardBody className="text-center">
+            <AlertCircle className="mx-auto mb-4 text-danger-600" size={48} />
             <p className="text-danger-600 mb-4">{error || 'Business not found'}</p>
-            <Button color="primary" href="/dashboard">
-              Back to Dashboard
-            </Button>
+            <div className="flex gap-2 justify-center">
+              <Button color="primary" variant="flat" onPress={loadBusiness}>
+                Try Again
+              </Button>
+              <Button color="primary" onPress={() => router.push('/dashboard')}>
+                Back to Dashboard
+              </Button>
+            </div>
           </CardBody>
         </Card>
       </div>
     );
   }
 
+  // Type guard: At this point, we know business is not null
+  if (!business) {
+    return (
+      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
+        <div className="text-center">
+          <Spinner size="lg" />
+          <p className="text-gray-600 mt-4">Loading business dashboard...</p>
+        </div>
+      </div>
+    );
+  }
+
   const renderTabContent = () => {
     switch (activeTab) {
       case 'overview':
@@ -150,22 +225,22 @@ export default function BusinessDashboardPage({ params }: BusinessDashboardProps
                   <div>
                     <h4 className="font-medium text-gray-900 mb-2">Settlement Address</h4>
                     <p className="font-mono text-sm text-gray-600 break-all">
-                      {business.settlement_address}
+                      {business?.settlement_address || 'Not set'}
                     </p>
                   </div>
                   <div>
                     <h4 className="font-medium text-gray-900 mb-2">Tipping Address</h4>
                     <p className="font-mono text-sm text-gray-600 break-all">
-                      {business.tipping_address}
+                      {business?.tipping_address || 'Not set'}
                     </p>
                   </div>
                   <div>
                     <h4 className="font-medium text-gray-900 mb-2">Tax Rate</h4>
-                    <p className="text-gray-600">{business.tax_rate}%</p>
+                    <p className="text-gray-600">{business?.tax_rate || 0}%</p>
                   </div>
                   <div>
                     <h4 className="font-medium text-gray-900 mb-2">Service Fee</h4>
-                    <p className="text-gray-600">{business.service_fee_rate}%</p>
+                    <p className="text-gray-600">{business?.service_fee_rate || 0}%</p>
                   </div>
                 </div>
               </CardBody>
diff --git a/frontend/src/app/business/register/page.tsx b/frontend/src/app/business/register/page.tsx
index 9d23e42..7772aec 100644
--- a/frontend/src/app/business/register/page.tsx
+++ b/frontend/src/app/business/register/page.tsx
@@ -1,16 +1,19 @@
 'use client';
 
-import React, { useState } from 'react';
+import React, { useState, useEffect } from 'react';
 import { Card, CardBody, CardHeader, Button, Input, Checkbox, Divider } from '@nextui-org/react';
 import { ArrowLeft, Building2, Wallet, Settings } from 'lucide-react';
 import Link from 'next/link';
 import { useRouter } from 'next/navigation';
 import { createBusiness, CreateBusinessRequest } from '../../../api/business';
+import BusinessTutorialModal from '../../../components/business/BusinessTutorialModal';
 
 export default function BusinessRegisterPage() {
   const router = useRouter();
   const [loading, setLoading] = useState(false);
   const [error, setError] = useState<string | null>(null);
+  const [showTutorial, setShowTutorial] = useState(true);
+  const [connectedWallet, setConnectedWallet] = useState<string | null>(null);
   const [formData, setFormData] = useState<CreateBusinessRequest>({
     name: "",
     logo: "",
@@ -29,6 +32,17 @@ export default function BusinessRegisterPage() {
     service_inclusive: false,
   });
 
+  // Update settlement address when wallet is connected
+  useEffect(() => {
+    if (connectedWallet) {
+      setFormData(prev => ({
+        ...prev,
+        settlement_address: connectedWallet,
+        tipping_address: connectedWallet, // Default to same address, user can change
+      }));
+    }
+  }, [connectedWallet]);
+
   const handleSubmit = async (e: React.FormEvent) => {
     e.preventDefault();
     setLoading(true);
@@ -61,9 +75,26 @@ export default function BusinessRegisterPage() {
     }));
   };
 
+  const handleTutorialComplete = (walletAddress: string) => {
+    setConnectedWallet(walletAddress);
+    setShowTutorial(false);
+  };
+
+  const handleTutorialClose = () => {
+    setShowTutorial(false);
+  };
+
   return (
-    <div className="min-h-screen bg-gray-50 py-8">
-      <div className="max-w-2xl mx-auto px-4">
+    <>
+      {/* Tutorial Modal */}
+      <BusinessTutorialModal
+        isOpen={showTutorial}
+        onClose={handleTutorialClose}
+        onComplete={handleTutorialComplete}
+      />
+
+      <div className="min-h-screen bg-gray-50 py-8">
+        <div className="max-w-2xl mx-auto px-4">
         {/* Header */}
         <div className="mb-8">
           <Link href="/dashboard">
@@ -272,7 +303,8 @@ export default function BusinessRegisterPage() {
             </Button>
           </div>
         </form>
+        </div>
       </div>
-    </div>
+    </>
   );
 }
diff --git a/frontend/src/app/layout.tsx b/frontend/src/app/layout.tsx
index bd8f04d..a2a5017 100644
--- a/frontend/src/app/layout.tsx
+++ b/frontend/src/app/layout.tsx
@@ -1,5 +1,5 @@
 // RootLayout.tsx
-import {config, titleFont} from "@/config";
+import { config, titleFont } from "@/config";
 import { Providers } from "./providers";
 import type { Metadata } from "next";
 import "./globals.css";
@@ -11,11 +11,16 @@ import Web3ModalProvider from "@/context";
 import { Toaster } from "react-hot-toast";
 import WithMaintenance from "@/components/WithMaintenance";
 import WithComingSoon from "@/components/WithComingSoon";
+import { LanguageProvider } from "@/i18n/useLanguage";
+import { TranslationProvider } from "@/i18n/TranslationContext";
+import { UserProvider } from "@/providers/UserProvider";
+import { TopMenu } from "@/components";
+import ClientOnly from "@/components/ClientOnly";
 
 export const metadata: Metadata = {
-  title: "Web3 Boilerplate",
+  title: "Payverge",
   description:
-    "A comprehensive, production-ready boilerplate for building Web3 applications with modern authentication, blockchain integration, and scalable architecture",
+    "Payverge, the future of crypto payments for hospitality!",
 };
 
 export default function RootLayout({
@@ -23,25 +28,67 @@ export default function RootLayout({
 }: {
   children: React.ReactNode;
 }) {
-  const initialState = cookieToInitialState(config.wagmiConfig, headers().get("cookie"));
+  // Handle server-side safely
+  let initialState;
+  let lang = 'en';
   
-  // Get language from cookie or default to 'en'
-  const cookies = headers().get('cookie') || '';
-  const langCookie = cookies.split(';').find(c => c.trim().startsWith('NEXT_LOCALE='));
-  const lang = langCookie ? langCookie.split('=')[1] : 'en';
+  try {
+    if (typeof window === 'undefined') {
+      const headersList = headers();
+      const cookieHeader = headersList.get("cookie");
+      
+      if (cookieHeader) {
+        initialState = cookieToInitialState(config.wagmiConfig, cookieHeader);
+        
+        // Get language from cookie or default to 'en'
+        const langCookie = cookieHeader.split(';').find(c => c.trim().startsWith('NEXT_LOCALE='));
+        lang = langCookie ? langCookie.split('=')[1] : 'en';
+      }
+    }
+  } catch (error) {
+    // Fallback for build time
+    console.warn('Headers not available during build, using defaults');
+  }
 
   return (
     <html lang={lang}>
       <body className={titleFont.className} suppressHydrationWarning={true}>
         {/* <WithMaintenance>
           <WithComingSoon> */}
-            <Toaster position="top-right" />
-            <StoreContextProvider>
-              <Web3ModalProvider initialState={initialState}>
-                <Providers>{children}</Providers>
-              </Web3ModalProvider>
-            </StoreContextProvider>
-          {/* </WithComingSoon>
+        <Toaster position="top-right" />
+        <ClientOnly fallback={
+          <main className="min-h-screen flex flex-col bg-white dark:bg-zinc-950 transition-colors duration-200">
+            <div className="px-5 sm:px-10 flex-1">
+              <div className="flex items-center justify-center min-h-screen">
+                <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900"></div>
+              </div>
+            </div>
+          </main>
+        }>
+          <StoreContextProvider>
+            <Web3ModalProvider initialState={initialState}>
+              <Providers>
+                <LanguageProvider>
+                  <TranslationProvider>
+                    <UserProvider>
+                      <main className="min-h-screen flex flex-col bg-white dark:bg-zinc-950 transition-colors duration-200">
+                        <TopMenu />
+                        {/* {getNetwork().id === baseSepolia.id && <InvestmentBanner />} */}
+                        {/* <Sidebar /> */}
+                        <div className="px-5 sm:px-10 flex-1">{children}</div>
+                        {/* <Footer /> */}
+                        {/* <OnboardingWrapper /> */}
+                        {/* <FloatingLanguageSwitcher /> */}
+                        {/* <ShareBar /> */}
+                      </main>
+                    </UserProvider>
+                  </TranslationProvider>
+                </LanguageProvider>
+              </Providers>
+            </Web3ModalProvider>
+          </StoreContextProvider>
+        </ClientOnly>
+        {/* </WithComingSoon>
         </WithMaintenance> */}
       </body>
     </html>
diff --git a/frontend/src/app/not-found.tsx b/frontend/src/app/not-found.tsx
index 761afbd..2786b3c 100644
--- a/frontend/src/app/not-found.tsx
+++ b/frontend/src/app/not-found.tsx
@@ -14,8 +14,8 @@ export default function NotFound() {
     <div className="min-h-screen flex flex-col justify-center items-center bg-gradient-to-b from-gray-50 to-blue-100">
       <div className="bg-white rounded-2xl shadow-2xl p-8 sm:p-12 mb-6 sm:mb-8 max-w-lg text-center hover:shadow-blue-200 transition-shadow duration-300">
         <Image
-          src="/footer-icons/Web3BoilerplateLogo-01.svg"
-          alt="Web3 Boilerplate Logo"
+          src="/footer-icons/PayvergeLogo.svg"
+          alt="Payverge Logo"
           width={128}
           height={128}
           className="h-auto mb-6 mx-auto hover:scale-110 transition-transform duration-300"
diff --git a/frontend/src/components/ComingSoon.tsx b/frontend/src/components/ComingSoon.tsx
index e51b52c..551d7f5 100644
--- a/frontend/src/components/ComingSoon.tsx
+++ b/frontend/src/components/ComingSoon.tsx
@@ -10,8 +10,8 @@ export default function ComingSoon() {
     <div className="min-h-screen flex flex-col justify-center items-center bg-gradient-to-b from-gray-50 to-blue-100">
       <div className="bg-white rounded-2xl shadow-2xl p-8 sm:p-12 mb-6 sm:mb-8 max-w-lg text-center hover:shadow-blue-200 transition-shadow duration-300">
         <Image
-          src="/footer-icons/Web3BoilerplateLogo-01.svg"
-          alt="Web3 Boilerplate Logo"
+          src="/footer-icons/PayvergeLogo.svg"
+          alt="Payverge Logo"
           width={128}
           height={128}
           className="h-auto mb-6 mx-auto hover:scale-110 transition-transform duration-300"
diff --git a/frontend/src/components/Maintenance.tsx b/frontend/src/components/Maintenance.tsx
index b6899d1..22964d3 100644
--- a/frontend/src/components/Maintenance.tsx
+++ b/frontend/src/components/Maintenance.tsx
@@ -7,8 +7,8 @@ export default function Maintenance() {
     <div className="min-h-screen flex flex-col justify-center items-center bg-gradient-to-b from-gray-50 to-blue-100">
       <div className="bg-white rounded-2xl shadow-2xl p-8 sm:p-12 mb-6 sm:mb-8 max-w-lg text-center hover:shadow-blue-200 transition-shadow duration-300">
         <Image
-          src="/footer-icons/Web3BoilerplateLogo-01.svg"
-          alt="Web3 Boilerplate Logo"
+          src="/footer-icons/PayvergeLogo.svg"
+          alt="Payverge Logo"
           width={128}
           height={128}
           className="h-auto mb-6 mx-auto hover:scale-110 transition-transform duration-300"
diff --git a/frontend/src/components/ui/top-menu/TopMenu.tsx b/frontend/src/components/ui/top-menu/TopMenu.tsx
index 19e8a25..0ae8049 100644
--- a/frontend/src/components/ui/top-menu/TopMenu.tsx
+++ b/frontend/src/components/ui/top-menu/TopMenu.tsx
@@ -95,8 +95,8 @@ export const TopMenu = () => {
           >
             <div className="relative w-20 h-6 sm:w-32 sm:h-8 md:w-40 md:h-10">
               <Image
-                src="/images/Web3BoilerplateLogo-01.svg"
-                alt={t('app.name', {}, 'Web3 Boilerplate')}
+                src="/images/PayvergeLogo.svg"
+                alt={t('app.name', {}, 'Payverge')}
                 fill
                 sizes="(max-width: 640px) 80px, (max-width: 768px) 128px, 160px"
                 className="object-contain"
@@ -122,8 +122,8 @@ export const TopMenu = () => {
         >
           <div className="relative w-20 h-6 sm:w-32 sm:h-8 md:w-40 md:h-10">
             <Image
-              src="/images/Web3BoilerplateLogo-01.svg"
-              alt="Web3 Boilerplate"
+              src="/images/PayvergeLogo.svg"
+              alt="Payverge"
               fill
               sizes="(max-width: 640px) 80px, (max-width: 768px) 128px, 160px"
               className="object-contain"
diff --git a/frontend/src/config/aws-s3/index.tsx b/frontend/src/config/aws-s3/index.tsx
index 9689a32..508151c 100644
--- a/frontend/src/config/aws-s3/index.tsx
+++ b/frontend/src/config/aws-s3/index.tsx
@@ -2,15 +2,17 @@ import { base, baseSepolia } from "@reown/appkit/networks";
 import { WagmiAdapter } from "@reown/appkit-adapter-wagmi";
 import { getNetwork } from "../network";
 
-export const projectId = process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID;
+export const projectId = process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID || process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID || "dummy-project-id";
 
-if (!projectId) throw new Error("Project ID is not defined");
+if (!process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID && !process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID) {
+  console.warn("NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID is not defined, using dummy value for build");
+}
 
 export const metadata = {
-  name: "Web3 Boilerplate",
+  name: "Payverge",
   description:
-    "Web3 Boilerplate - A comprehensive starter template for Web3 applications with authentication and wallet integration",
-  url: "https://yourapp.com",
+    "Payverge, the future of crypto payments for hospitality!",
+  url: "https://payverge.io",
   icons: ["/images/logo.svg"],
 };
 
diff --git a/frontend/src/config/aws-s3/siwe-config/useSiweConfig.ts b/frontend/src/config/aws-s3/siwe-config/useSiweConfig.ts
index 326fc5f..69de946 100644
--- a/frontend/src/config/aws-s3/siwe-config/useSiweConfig.ts
+++ b/frontend/src/config/aws-s3/siwe-config/useSiweConfig.ts
@@ -37,17 +37,17 @@ export const siweConfig = () => {
                 ? address.split(':').pop() 
                 : address;
             
-            return `🚗 Welcome to TokenFleet!
+            return `🍽️ Welcome to Payverge!
 
-Sign to verify your wallet ownership and login. No gas fees.
+Sign to verify your wallet ownership and authenticate with our platform. No gas fees required.
 
-🔐 Details:
+🔐 Authentication Details:
 Wallet: ${cleanAddress}
 Verification: ${nonce}
 Network: Base #${chainId}
 Time: ${timestamp}
 
-By signing, you accept TokenFleet's terms of service.`;
+By signing, you accept Payverge's terms of service and confirm ownership of this wallet.`;
         },
         getNonce: async (address) => {
             const nonce = await getCsrfToken({ address });
diff --git a/frontend/src/context/index.tsx b/frontend/src/context/index.tsx
index eaff466..2aa107a 100644
--- a/frontend/src/context/index.tsx
+++ b/frontend/src/context/index.tsx
@@ -9,30 +9,43 @@ import { getNetwork } from "@/config/network";
 
 // Setup queryClient
 const queryClient = new QueryClient();
-const network = getNetwork();
-const chainKey = `eip155:${network.id}`;
-
-createAppKit({
-  adapters: [config],
-  networks: [network],
-  metadata: metadata,
-  // Setting tokens to null to hide ETH values
-  tokens: {
-    [chainKey]: {
-      address: process.env.NEXT_PUBLIC_USDC_ADDRESS!,
-    }
-  },
-  siweConfig: siweConfig(),
-  debug: false,
-  defaultNetwork: network,
-  projectId: process.env.NEXT_PUBLIC_PROJECT_ID!,
-  features: {
-    analytics: true,
-    email: true, // default to true
-    socials: ['x', 'google', 'apple'], // default value
-    emailShowWallets: true // default to true
-  },
-});
+
+// Safely initialize network and AppKit only on client side
+let network;
+let chainKey;
+let appKitInitialized = false;
+
+if (typeof window !== 'undefined') {
+  try {
+    network = getNetwork();
+    chainKey = `eip155:${network.id}`;
+
+    createAppKit({
+      adapters: [config],
+      networks: [network],
+      metadata: metadata,
+      // Setting tokens to null to hide ETH values
+      tokens: {
+        [chainKey]: {
+          address: process.env.NEXT_PUBLIC_USDC_ADDRESS || "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
+        }
+      },
+      siweConfig: siweConfig(),
+      debug: false,
+      defaultNetwork: network,
+      projectId: process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID || process.env.NEXT_PUBLIC_PROJECT_ID || process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID || "dummy-project-id",
+      features: {
+        analytics: true,
+        email: true, // default to true
+        socials: ['x', 'google', 'apple'], // default value
+        emailShowWallets: true // default to true
+      },
+    });
+    appKitInitialized = true;
+  } catch (error) {
+    console.warn('Failed to initialize AppKit:', error);
+  }
+}
 
 export default function Web3ModalProvider({
   children,
